Shader "Custom/mask" {

	Properties
	{
		_MainTex("Sprite Texture", 2D) = "white" {}
	}

	SubShader
	{
		Tags { "Queue" = "Transparent+1" "IgnoreProjector" = "True" }

		ZWrite Off
		ColorMask 0
		ZTest Always

		/*
		ZWrite Off
		Blend SrcAlpha OneMinusSrcAlpha
		*/

		Pass
		{
			Stencil
			{
				Ref 1
				Comp always
				Pass replace
			}

			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			#include "UnityCG.cginc"

			struct appdata
			{
				float4 vertex : POSITION;
				float4 color : COLOR;
				float2 uv : TEXCOORD0;
			};

			struct v2f
			{
				float4 vertex : SV_POSITION;
				fixed4 color : COLOR;
				half2 uv  : TEXCOORD0;
			};

			sampler2D _MainTex;
			float4 _MainTex_ST;

			v2f vert(appdata i)
			{
				v2f o;
				o.vertex = mul(UNITY_MATRIX_MVP, i.vertex);
				o.uv = TRANSFORM_TEX(i.uv, _MainTex);
				o.color = i.color;

				return o;
			}

			fixed4 frag(v2f i) : COLOR
			{
				float4 color = tex2D(_MainTex, i.uv) * i.color;
				if (color.a < 0.1) discard;
				return color;
			}
			ENDCG
		}
	}
}
